FROM ubuntu:jammy AS install_depency

ENV PYTHONUNBUFFERED 1
ENV DEBIAN_FRONTEND noninteractive
ENV LANG C.UTF-8

RUN apt-get update -qq && apt-get install -y -qq \
    # std libs
    git less nano curl \
    ca-certificates \
    wget build-essential\
    # python basic libs
    python3.11 python3.11-dev python3.11-venv gettext \
    # geodjango
    gdal-bin binutils libproj-dev libgdal-dev \
    # postgresql
    libpq-dev postgresql-client && \
    apt-get clean all && rm -rf /var/apt/lists/* && rm -rf /var/cache/apt/*

# install pip
RUN wget https://bootstrap.pypa.io/get-pip.py && python3.11 get-pip.py && rm get-pip.py
RUN pip3 install --no-cache-dir setuptools wheel -U

CMD ["/bin/bash"]

FROM install_depency
ENV LANG C.UTF-8

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $HOME
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

COPY requirements.txt $APP_HOME
RUN apt-get update -qq && apt-get install -y -qq python3-pip 
RUN python3 -m pip install -U pip
RUN python3 -m pip install -U setuptools
RUN pip3 install --upgrade pip
RUN pip3 install -r requirements.txt

ENV POSTGRES_DB = ${POSTGRES_DB}
ENV POSTGRES_HOST = ${POSTGRES_HOST}
ENV POSTGRES_PORT = ${POSTGRES_PORT}
ENV POSTGRES_USER = ${POSTGRES_USER}
ENV POSTGRES_PASSWORD = ${POSTGRES_PASSWORD}

ENV S3_ACCESS_KEY_ID = ${S3_ACCESS_KEY_ID}
ENV S3_SECRET_ACCESS_KEY = ${S3_SECRET_ACCESS_KEY}
ENV S3_HOST = ${S3_HOST}
ENV S3_REGION_NAME = ${S3_REGION_NAME}
ENV S3_BUCKET = ${S3_BUCKET}

# copy entrypoint.sh
COPY ./docker/entrypoint.sh .
RUN chmod +x /home/app/web/entrypoint.sh

# copy project
COPY . .

RUN chown -R www-data:www-data .

USER www-data

# run entrypoint.sh
ENTRYPOINT [ "/home/app/web/entrypoint.sh" ]
CMD [ "gunicorn", "cosia_back.wsgi:application", "--bind", "0.0.0.0:8180" , "--worker-tmp-dir", "/mem"]